#!/usr/bin/env sh

if [ "$GHC_TOP-x" == "-x" ]; then
    echo "GHC_TOP environment variable must be set first"
    exit 1
fi

case "$1" in
'list')
    ls -l "$GHC_TOP/Versions" | awk '/dr.*/ { print $NF }'
    ;;
'init')
    mkdir -p "$GHC_TOP/Versions"
    mkdir -p "$GHC_TOP/System"
    ;;
'use')
    rm -f "$GHC_TOP/Current"
    rm -f "$GHC_TOP/Cabal"
    ln -s "$GHC_TOP/Versions/$2" "$GHC_TOP/Current"
    ln -s "$GHC_TOP/System/$2" "$GHC_TOP/Cabal"
    ;;
'site')
    if [ -d "$GHC_TOP/Site" ]; then
        ls -la $GHC_TOP/Site | awk -F '/' '{ print $NF }';
    else
        echo 'no active sites'
    fi
    ;;
'env')
    echo "Home: $GHC_TOP"
    echo "Active Site: `ghc-env site`"
    echo "Active Compiler: `ghc-env active`"
    echo "Environment:"
    set | grep --colour=never GHC_
    set | grep --colour=never CABAL_
    ;;
'full-install')
    PWD = "`pwd`"
    cd "$2"
    ./configure --prefix=$GHC_TOP/Versions/$3
    make install
    ghc-env install
    ;;
'install')
    ghc-env use "$2"
    PWD="`pwd`"
    cd $GHC_TOP/Common/cabal/cabal-install
    env VERBOSE=-v PREFIX="$GHC_TOP/System/$2" ./bootstrap.sh
    cd $PWD
    cabal update
    cabal install cabal-dev --force-reinstalls
    cabal install happy
    cabal install ghc-mod
    ;;
'active')
    ls -la $GHC_TOP/Current | awk -F '/' '{ print $NF }'
    ;;
*)
    echo "Usage: $0 { list | use (version) | site | env | full-install | install | active }"
    ;;
esac
